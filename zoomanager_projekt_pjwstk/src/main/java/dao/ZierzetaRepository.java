package dao;

import dao.RepositoryBase;
import dao.mappers.IMapResultSetIntoEntity;
import dao.model.IHaveId;
import dao.model.Zwierze;
import dao.repositories.IRepositoryZwierze;
import dao.uow.IUnitOfWork;
import dao.uow.UnitOfWork;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author TKK
 */
public class ZierzetaRepository extends RepositoryBase<Zwierze> implements IRepositoryZwierze {


    private final String TABLE_NAME = "zwierzeta";

    public ZierzetaRepository(Connection connection, IMapResultSetIntoEntity<Zwierze> mapper,IUnitOfWork uow) {
        super(connection, mapper, uow);
    }

    @Override
    //zwracam skrypt wrzucajacy
    protected String insertSql() {
        return "insert into"
                + tableName()
                + " (nazwa) values"
                + "(?)";
    }

    @Override
    protected String updateSql() {
        return "update "
                + tableName()
                + " set (nazwa) ="
                + "(?)"
                + "where "
                + "id = ?";
    }

    @Override
    //metoda ustawiajaca ?-ki
    protected void setUpdate(Zwierze entity) throws SQLException {
        update.setString(1, entity.getNazwa());
        update.setInt(2, entity.getId());
    }

    @Override
    protected void setInsert(Zwierze entity) throws SQLException {
        insert.setString(1, entity.getNazwa());
    }

    @Override
    protected String createTableSql() {
        return "create table"
                + tableName()
                + " (id int generated by default as identity primary key,"
                + "name varchar(20))";
    }

    @Override
    protected String tableName() {
        return TABLE_NAME;
    }
    
    @Override
    public List<Zwierze> getByName(String name) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


}
